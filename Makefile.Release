#############################################################################
# Makefile for building: filter_meshprt
# Generated by qmake (2.01a) (Qt 4.7.0) on: Mi 8. Jun 13:17:47 2011
# Project:  filter_meshprt.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DNOMINMAX -DQT_DLL -DQT_NO_DEBUG -DQT_PLUGIN -DQT_SCRIPT_LIB -DQT_XMLPATTERNS_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"c:\Qt\2010.05\qt\include\QtCore" -I"c:\Qt\2010.05\qt\include\QtGui" -I"c:\Qt\2010.05\qt\include\QtOpenGL" -I"c:\Qt\2010.05\qt\include\QtXml" -I"c:\Qt\2010.05\qt\include\QtXmlPatterns" -I"c:\Qt\2010.05\qt\include\QtScript" -I"c:\Qt\2010.05\qt\include" -I"..\.." -I"..\..\..\..\vcglib" -I"..\..\external\glew-1.5.1\include" -I"..\..\external\directX" -I"c:\Qt\2010.05\qt\include\ActiveQt" -I"release" -I"c:\Qt\2010.05\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -mthreads -Wl -shared -Wl,--out-implib,..\..\distrib\plugins\libfilter_meshprt.a
LIBS        =        -L"c:\Qt\2010.05\qt\lib" -lglu32 -lopengl32 -lgdi32 -luser32 -L../../distrib -lcommon -LC:\Users\flosmn\Dropbox\Studienarbeit\meshlab-sources\meshlab\src\external\directX -ld3d9 -ld3dx9 -ld3dx9d -ldinput8 -ldxguid -lQtScript4 -lQtXmlPatterns4 -lQtXml4 -lQtOpenGL4 -lQtGui4 -lQtCore4 
QMAKE         = c:\qt\2010.05\qt\bin\qmake.exe
IDC           = c:\Qt\2010.05\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = Window.cpp \
		PRTEngine.cpp \
		Mesh.cpp \
		Light.cpp \
		GfxStats.cpp \
		filter_meshprt.cpp \
		DirectXMesh.cpp \
		DirectInput.cpp \
		d3dUtil.cpp \
		d3dApp.cpp \
		Camera.cpp \
		MeshPRT.cpp \
		CubeMap.cpp release\moc_filter_meshprt.cpp
OBJECTS       = release/Window.o \
		release/PRTEngine.o \
		release/Mesh.o \
		release/Light.o \
		release/GfxStats.o \
		release/filter_meshprt.o \
		release/DirectXMesh.o \
		release/DirectInput.o \
		release/d3dUtil.o \
		release/d3dApp.o \
		release/Camera.o \
		release/MeshPRT.o \
		release/CubeMap.o \
		release/moc_filter_meshprt.o
DIST          = 
QMAKE_TARGET  = filter_meshprt
DESTDIR        = ..\..\distrib\plugins\ #avoid trailing-slash linebreak
TARGET         = filter_meshprt.dll
DESTDIR_TARGET = ..\..\distrib\plugins\filter_meshprt.dll

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.filter_meshprt.Release  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec c:\Qt\2010.05\qt\mkspecs\win32-g++ -o Makefile.Release filter_meshprt.pro

dist:
	$(ZIP) filter_meshprt.zip $(SOURCES) $(DIST) filter_meshprt.pro c:\Qt\2010.05\qt\mkspecs\qconfig.pri c:\Qt\2010.05\qt\mkspecs\modules\qt_webkit_version.pri c:\Qt\2010.05\qt\mkspecs\features\qt_functions.prf c:\Qt\2010.05\qt\mkspecs\features\qt_config.prf c:\Qt\2010.05\qt\mkspecs\features\exclusive_builds.prf c:\Qt\2010.05\qt\mkspecs\features\default_pre.prf c:\Qt\2010.05\qt\mkspecs\features\win32\default_pre.prf ..\..\shared.pri c:\Qt\2010.05\qt\mkspecs\features\release.prf c:\Qt\2010.05\qt\mkspecs\features\debug_and_release.prf c:\Qt\2010.05\qt\mkspecs\features\default_post.prf c:\Qt\2010.05\qt\mkspecs\features\win32\default_post.prf c:\Qt\2010.05\qt\mkspecs\features\build_pass.prf c:\Qt\2010.05\qt\mkspecs\features\win32\rtti.prf c:\Qt\2010.05\qt\mkspecs\features\win32\exceptions.prf c:\Qt\2010.05\qt\mkspecs\features\win32\stl.prf c:\Qt\2010.05\qt\mkspecs\features\shared.prf c:\Qt\2010.05\qt\mkspecs\features\dll.prf c:\Qt\2010.05\qt\mkspecs\features\warn_on.prf c:\Qt\2010.05\qt\mkspecs\features\qt.prf c:\Qt\2010.05\qt\mkspecs\features\win32\opengl.prf c:\Qt\2010.05\qt\mkspecs\features\win32\thread.prf c:\Qt\2010.05\qt\mkspecs\features\moc.prf c:\Qt\2010.05\qt\mkspecs\features\win32\windows.prf c:\Qt\2010.05\qt\mkspecs\features\resources.prf c:\Qt\2010.05\qt\mkspecs\features\uic.prf c:\Qt\2010.05\qt\mkspecs\features\yacc.prf c:\Qt\2010.05\qt\mkspecs\features\lex.prf c:\Qt\2010.05\qt\mkspecs\features\include_source_dir.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\Window.o release\PRTEngine.o release\Mesh.o release\Light.o release\GfxStats.o release\filter_meshprt.o release\DirectXMesh.o release\DirectInput.o release\d3dUtil.o release\d3dApp.o release\Camera.o release\MeshPRT.o release\CubeMap.o release\moc_filter_meshprt.o
	-$(DEL_FILE) ..\..\distrib\plugins\libfilter_meshprt.a

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_filter_meshprt.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release\moc_filter_meshprt.cpp
release/moc_filter_meshprt.cpp: DirectXMesh.h \
		d3dUtil.h \
		localConfig.h \
		Mesh.h \
		MeshDatastructures.h \
		Window.h \
		d3dApp.h \
		filter_meshprt.h
	C:\Qt\2010.05\qt\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 filter_meshprt.h -o release\moc_filter_meshprt.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 



####### Compile

release/Window.o: Window.cpp Window.h \
		d3dUtil.h \
		localConfig.h \
		d3dApp.h \
		Mesh.h \
		MeshDatastructures.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Window.o Window.cpp

release/PRTEngine.o: PRTEngine.cpp PRTEngine.h \
		d3dUtil.h \
		localConfig.h \
		Mesh.h \
		MeshDatastructures.h \
		LightSource.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\PRTEngine.o PRTEngine.cpp

release/Mesh.o: Mesh.cpp Mesh.h \
		d3dUtil.h \
		localConfig.h \
		MeshDatastructures.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Mesh.o Mesh.cpp

release/Light.o: Light.cpp Light.h \
		d3dUtil.h \
		localConfig.h \
		LightSource.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Light.o Light.cpp

release/GfxStats.o: GfxStats.cpp GfxStats.h \
		d3dUtil.h \
		localConfig.h \
		d3dApp.h \
		Window.h \
		Mesh.h \
		MeshDatastructures.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\GfxStats.o GfxStats.cpp

release/filter_meshprt.o: filter_meshprt.cpp filter_meshprt.h \
		DirectXMesh.h \
		d3dUtil.h \
		localConfig.h \
		Mesh.h \
		MeshDatastructures.h \
		Window.h \
		d3dApp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\filter_meshprt.o filter_meshprt.cpp

release/DirectXMesh.o: DirectXMesh.cpp DirectXMesh.h \
		d3dUtil.h \
		localConfig.h \
		Mesh.h \
		MeshDatastructures.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\DirectXMesh.o DirectXMesh.cpp

release/DirectInput.o: DirectInput.cpp DirectInput.h \
		d3dUtil.h \
		localConfig.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\DirectInput.o DirectInput.cpp

release/d3dUtil.o: d3dUtil.cpp d3dUtil.h \
		localConfig.h \
		DirectInput.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\d3dUtil.o d3dUtil.cpp

release/d3dApp.o: d3dApp.cpp d3dApp.h \
		d3dUtil.h \
		localConfig.h \
		Window.h \
		Mesh.h \
		MeshDatastructures.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\d3dApp.o d3dApp.cpp

release/Camera.o: Camera.cpp Camera.h \
		d3dUtil.h \
		localConfig.h \
		DirectInput.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Camera.o Camera.cpp

release/MeshPRT.o: MeshPRT.cpp d3dApp.h \
		d3dUtil.h \
		localConfig.h \
		Window.h \
		Mesh.h \
		MeshDatastructures.h \
		DirectInput.h \
		GfxStats.h \
		Camera.h \
		PRTEngine.h \
		LightSource.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\MeshPRT.o MeshPRT.cpp

release/CubeMap.o: CubeMap.cpp CubeMap.h \
		d3dUtil.h \
		localConfig.h \
		LightSource.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\CubeMap.o CubeMap.cpp

release/moc_filter_meshprt.o: release/moc_filter_meshprt.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_filter_meshprt.o release\moc_filter_meshprt.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

